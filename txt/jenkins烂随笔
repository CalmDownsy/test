jenkins节点
1.Jenkins的分布式构建基于节点配置，能偶让同一套代码或项目在不同环境中（Windows、Linux）中编译部署；
2.通过Jenkins节点配置，分布Jenkins工作空间，部署项目到不同的服务集群中，节点分为主节点和从节点（Master/SLave）,
从节点服务器不需要安装Jenkins服务，只需要运行节点服务即可，构建事件的分发由master执行；
3.从节点服务器上同样需要配置jdk/maven等；
4.从节点只是一个执行机，在当前工作目录下为构建job创建workspace，仍然有主节点（jenkins所在服务器进行调度），
archive归档文件等操作也保存在主服务器上；
5.从节点配置：
远程工作目录：类似于主服务器上jenkins的主目录；
启动方式：一般选择SSH方式；
主机：从节点部署的主机IP；
用户认证：在Credentials添加用户认证，通过用户名/密码的方式，也可以通过用户名/秘钥的方式，同时需要在从节点服务下.ssh中配置
master节点服务器的公钥（authorized_keys），免密ssh

java -jar jenkins.war --httpPort=8090
http://localhost:8090/exit(restart/reload)
net start(stop) jenkins


jenkins Publish ssh插件
1.在系统设置中配置SSH server，可通过秘钥或者用户名密码的方式进行配置，主要特别注意Remote Directory的配置，
在后面job中上传时都是基于此路径的相对路径，为了方便可以写成‘/’,那么job中的配置从‘Users/用户名’开始；
2.在job中配置 SSH Publishers，构建后操作选择'send build artifacts over SSH',从系统配置的SSH server中
选择一个目标服务器
‘Source files’：准备发布的源文件，根路径为.jenkins/workspace/${JOB_NAME}，所以此处填写相对路径即可，如target/*,
构建阶段执行shell或其他操作牵涉到文件路径均是如此;
'Remove prefix': 去掉匹配到的路径，如target/demo/a.txt,填写target的话拷贝过去则是demo/a.txt,没有目录会创建；
‘Remote directory’: 远程服务器的目标路径，相对于ssh server中设置的路径；
‘Exec command’: 上传后执行的操作，（如解压，部署，启动服务等操作）默认在远程服务器的家目录下。

jenkins邮件通知插件
1.系统管理-系统设置中配置系统管理员地址，即邮件都是从该邮箱发出；
2.配置邮件通知服务：
SMTP服务器：如stmp.163.com;
用户名/密码
3.构建后操作配置E-mail Notification，即收件地址；
4.邮件扩展插件 Extended E-mail Notification，可设置邮件模板，默认收件人（具体的格式抄送用“cc：”前缀，密送用“bcc：”前缀，不使用前缀默认为收件人）;
5.在job中构建后操作配置Editable Email Notification,收件人、主题、内容都可用插件配置的$DEFAULT_*设置，也可以自定义覆盖插件设置，
可选择attach build log发送构建日志的附件，或填写路径上传其他文件；
6.Triggers可自定义各种构建情况下将邮件发送给什么人，如最后一次代码提交人（Developers）,发起构建的人（Requestors），
也可以通过自定义收件人列表和邮件模板。

jenkins MultiJob插件
1.参数化构建时支持参数传递,通过${}形式在子job中获取；
2.创建多个MultiJob Phase，每个phase可以有多个job，必须是实现创建好的各类型job，运行时每个phase从上到下依次运行，phase内job
可以按顺序依次运行也可以并发。

-------------------------------------------------------------------------